<script>
      var app = angular.module("myApp", ['ngStomp']); 
            
      
      app.factory('websocketService', function () {
          return {
              start: function (url, callback) {
                  var websocket = new WebSocket(url);
                  websocket.onopen = function () {
                  };
                  websocket.onclose = function () {
                  };
                  websocket.onmessage = function (evt) {
                      callback(evt);
                  };
              }
          }
      }
  );
      
             app.controller("myCtrl", function($scope, $stomp, websocketService) {
                $scope.firstName = "John";
                $scope.lastName = "Doe";

               $scope.nroFunc = 0;
               
               
               websocketService.start("ws://localhost:8082/marcelo/websocket", function (evt) {
                   var obj = JSON.parse(evt.data);
                   $scope.$apply(function () {
                       $scope.msg = obj.message
                   });
               });
               
               
/* 
               
            	    $stomp
            	      .connect('/marcelo',{}, function(err){
          	    	  	console.log('Erro ao conectar');
        	    	  	console.log(err);
        	      	  })
            	      .then(function (frame) {
            	        
            	    	  console.log(frame.command);
            	    	  
            	    	  var subscription = $stomp.subscribe('/topic/nrofunc', function (payload, headers, res) {
            	    		  $scope.payload = payload
                          }, {});
                          
            	        // Unsubscribe
            	        //subscription.unsubscribe()

            	        // Send message
            	        /* $stomp.send('/dest', {
            	          message: 'body'
            	        }, {
            	          priority: 9,
            	          custom: 42 // Custom Headers
            	        }) */

            	        // Disconnect
            	        /*$stomp.disconnect().then(function () {
            	        	console.log('disconnected')
            	        });
            	        
            	      }) */
               
               
               
               
               
              /*  var ws = $websocket.$new('ws://localhost:8082/marcelo/websocket');

               ws.$on('$open', function () {
                   console.log('Oh my gosh, websocket is really open! Fukken awesome!');
               });
               
               ws.$on('nrofunc event', function (message) { // it listents for 'incoming event'
                 console.log('something incoming from the server: ' + message);
               }); */
               
            });

/*       var stompClientFuncionalidade = {
        client: null,
        socket: null,
        connect: function () {
          this.socket = new SockJS('/marcelo');
          this.client = Stomp.over(this.socket);
          this.client.connect({}, function (frame) {
            stompClientFuncionalidade.client.subscribe('/topic/nrofunc', function (events) {
              stompClientFuncionalidade.consume(events);
            });
          });
        },
        consume: function (raw) {
          console.log(raw);

          //$scope.nroFunc = raw["sis-test"];

        },
        close: function () {
          if (this.client != null && this.client != undefined) {
            this.client.unsubscribe('/topic/nroFunc');
            this.client.disconnect();
            this.client = null;
          }
        }
      };

      stompClientFuncionalidade.connect(); */


    </script>

-----------


var app = angular.module("myApp", []);

app.controller("myCtrl", function($scope){

			var stompClient = null;
			
			function setConnected(connected) {
			    $("#connect").prop("disabled", connected);
			    $("#disconnect").prop("disabled", !connected);
			    if (connected) {
			        $("#conversation").show();
			    }
			    else {
			        $("#conversation").hide();
			    }
			    $("#greetings").html("");
			}
			
			function connect() {
			    var socket = new SockJS('/marcelo');
			    stompClient = Stomp.over(socket);
			    stompClient.connect({}, function (frame) {
			        setConnected(true);
			        console.log('Connected: ' + frame);
			        stompClient.subscribe('/topic/nrofunc', function (item) {
			            //showGreeting(JSON.parse(item.body).content);
			        	console.log(item);
			        	processarDados(item);
			        });
			    });
			}
			
			function processarDados(node){
				
				var item = JSON.parse(node.body).content
				
				
				
			}
			
			
			
			
			function disconnect() {
			    if (stompClient != null) {
			        stompClient.disconnect();
			    }
			    setConnected(false);
			    console.log("Disconnected");
			}
			
			function sendName() {
			    stompClient.send("/app/hello", {}, JSON.stringify({'name': $("#name").val()}));
			}
			
			function showGreeting(message) {
			    //$("#greetings").append("<tr><td>" + message + "</td></tr>");
			}
			
			
			connect();
			
			/*
			$(function () {
			    /*$("form").on('submit', function (e) {
			        e.preventDefault();
			    });
			    $( "#connect" ).click(function() { connect(); });
			    $( "#disconnect" ).click(function() { disconnect(); });
			    $( "#send" ).click(function() { sendName(); });*/
				
				
				
			});
			*/

});